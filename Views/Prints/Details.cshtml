@model PrintBed.Models.PrintDetailPage

@{
    ViewData["Title"] = "Details";
}
<div id="drop-zone-fullpage">
    <div class="d-flex justify-content-center">

        <div id="beforeDrop" class="loading-content">Drop Files to Upload</div>

        <div id="afterDrop" style="width:500px; visibility: hidden;">
            <div class="progress" role="progressbar" style="width:500px">
                <div id="progress" class="progress-bar progress-bar-striped progress-bar-animated" style="width: 0%">75%</div>
            </div>
        </div>

    </div>
</div>





<div class="container">
    <div class="row mb-3">
        <div class="col">
            @if (!string.IsNullOrEmpty(ViewBag.Referer))
            {
                <a href="@ViewBag.Referer">Back to Previous Page</a>
            }
            else
            {
                <a href="/home">Back to Prints</a>
            }
        </div>
    </div>
    <div class="row">
        <div class="col">
            <h1>@Html.DisplayFor(model => model.Print.Name)</h1>            
        </div>
    </div>

    <div class="accordion" id="accordionPanelsStayOpenExample">
        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelDescription" aria-expanded="false" aria-controls="panelsStayOpen-collapseOne">
                    Description 
                </button>
            </h2>
            <div id="panelDescription" class="accordion-collapse collapse">
                <div class="accordion-body">
                    <p>
                        @Html.DisplayFor(model => model.Print.Description)
                    </p>
                </div>
            </div>
        </div>
        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#panelPrintInstructions" aria-expanded="false" aria-controls="panelsStayOpen-collapseTwo">
                    Print Instructions
                </button>
            </h2>
            <div id="panelPrintInstructions" class="accordion-collapse collapse">
                <div class="accordion-body">
                    <p>
                        @Html.DisplayFor(model => model.Print.PrintInstructions)
                    </p>    
                </div>
            </div>
        </div>
        <div class="accordion-item">
            <h2 class="accordion-header">
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#panelFiles" aria-expanded="true" aria-controls="panelsStayOpen-collapseTwo">
                    Files
                </button>
            </h2>
            <div id="panelFiles" class="accordion-collapse collapse show ">
                <div class="accordion-body">
                    <div class="row mb-2">                    
                        <div class="col">
                            <nav>
                                <ul class="pagination pagination-sm ">
                                    <li class="page-item">
                                        <a class="page-link @(Model.currentPage<=1 ? "disabled" : "") " href="/Prints/Details/@(Model.Print.Id)?page=@(Model.currentPage-1)">Previous</a>
                                    </li>
                                    @for (int i = 1; i <= Model.totalPages; i++)
                                    {
                                        <li class="page-item"><a class="page-link @(Model.currentPage==i ? "disabled" : "")" href="/Prints/Details/@(Model.Print.Id)?page=@(i)">@i</a></li>
                                    }
                                    <li class="page-item">
                                        <a class="page-link @(Model.currentPage>=Model.totalPages ? "disabled" : "") " href="/Prints/Details/@(Model.Print.Id)?page=@(Model.currentPage+1)">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                        <div class="col text-end">
                            <a class="btn btn-primary btn-sm" onclick="showFilePick();">+</a>
                            <form id="uploadForm" enctype="multipart/form-data">
                                <input class="disabled" type='file' id="uploadedFile" name="uploadedFile" style="display:none" />
                                <input type="hidden" id="printId" name="printId" value="@Model?.Print.Id" />
                            </form>
                        </div>
                    </div>

                    <div class="row row-cols-4 g-2">
                        @foreach (PrintFile item in Model.Files)
                        {
                            <div class="col">
                                <div class="card" style="width: 19rem;">
                                    @if (item.FileType?.PreviewType == "Model Viewer")
                                    {
                                        <div data-modelviewer="true" data-modelviewer-path="@item.FilePath" class="card-img-top border rounded"></div>
                                    }
                                    else if (item.FileType?.PreviewType == "Image")
                                    {
                                        <img src="@item.FilePath" class="card-img-top object-fit-scale border rounded" />
                                    }
                                    <div class="card-body">
                                        <h6 class="card-title text-truncate">@item.DisplayName</h6>
                                        <p class="card-text">@item.Description</p>
                                    </div>
                                    <ul class="list-group list-group-flush">
                                        <li class="list-group-item"><img src="@item.FileType?.ImagePath" class="img-icon ms-1" alt="@item.FileType?.Name" title="@item.FileType?.Name" /> <span class="font-monospace"> @item.FileExtension @(Math.Round(item.FileSize / 1000000, 2)) MB</span></li>
                                        <li class="list-group-item">
                                            <div class="btn-group" role="group">
                                                <a class="card-link btn btn-outline-secondary btn-sm" asp-action="Edit" asp-controller="PrintFiles" asp-route-id="@item.Id"><span class="badge"><img src="/img/pencil.png" class="img-icon-sm me-2" alt="Edit" /> Edit</span> </a>
                                                <a class="card-link btn btn-outline-secondary btn-sm" asp-action="Download" asp-controller="PrintFiles" asp-route-id="@item.Id"><span class="badge"><img src="/img/download.png" class="img-icon-sm me-2" alt="Download" /> Download</span></a>
                                                <a class="card-link btn btn-outline-secondary btn-sm" asp-action="Delete" asp-controller="Prints" asp-route-id="@item.Id"><span class="badge"><img src="/img/garbage.png" class="img-icon-sm me-2" alt="Delete" /> Delete</span></a>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        }
                    </div>

                </div>
            </div>
        </div>


    </div>
    


    
</div>




@section Scripts {
    <script type="module" src="/js/ModelViewer.js"></script>
    <script>

        $(document).ready(function () {           

        });


        
        var dropZone = document.getElementById('drop-zone-fullpage');
        dropZone.style.visibility = "hidden";
        var fileInput = document.getElementById('uploadedFile');
        var form = document.getElementById('uploadForm');
        var beforeDrop = document.getElementById('beforeDrop'); 
        var afterDrop = document.getElementById('afterDrop'); 
        var progress = document.getElementById('progress');        
                
        function allowDrag(e) {
            if (true) {  // Test that the item being dragged is a valid one this currently allows ALL files
                e.dataTransfer.dropEffect = 'copy';
                e.preventDefault();
            }
        }
        function handleDrop(e) {
            e.preventDefault();            
            fileInput.files = e.dataTransfer.files;
            uploadFile();
        }
        function showFilePick() {
            console.log('clicked');
            fileInput.click();
        }

        window.addEventListener('dragenter', function (e) {
            dropZone.style.visibility = "visible";
        });
        dropZone.addEventListener('dragenter', allowDrag);
        dropZone.addEventListener('dragover', allowDrag);
        dropZone.addEventListener('dragleave', function(e) {
            dropZone.style.visibility = "hidden";
        });
        dropZone.addEventListener('drop', handleDrop);
                    
        fileInput.addEventListener('change', function(e){
            uploadFile();
        });

        function uploadFile(){
            var recordIdInput = document.getElementById('printId');            
            
            //show dropzone and show afterDrop and hide before drop
            dropZone.style.visibility = "visible";
            afterDrop.style.visibility = "visible";
            beforeDrop.style.visibility = "hidden";

            // Increase the timeout for the form submission
            form.timeout = 0; // 0 means no timeout

            // Submit the form asynchronously
            var xhr = new XMLHttpRequest();

            //progressBar.style.display = 'initial';

            xhr.upload.addEventListener('progress', function (event) {
                if (event.lengthComputable) {
                    var percentComplete = (event.loaded / event.total) * 100;
                    progress.style.width = percentComplete+"%";
                    progress.innerHTML = Math.round(percentComplete) + "%";
                }
            });

            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    // Handle the response from the server
                    if (xhr.status === 200) {
                        console.log("File uploaded successfully!");

                        location.reload();

                    } else {

                        console.error("Error uploading file!");
                    }
                }
            };

            xhr.open('POST', '/PrintFiles/FileUpload', true);
            xhr.send(new FormData(form));
        }

    </script>
}



